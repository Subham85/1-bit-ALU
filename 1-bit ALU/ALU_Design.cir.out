* /home/subham109/spice/esim/alu_design/alu_design.cir

.include andg.sub
.include "/usr/share/local/sky130_fd_pr/models/sky130_fd_pr__model__pnp.model.spice"
.lib "/usr/share/local/sky130_fd_pr/models/sky130.lib.spice" ss
.include "/usr/share/local/sky130_fd_pr/models/sky130_fd_pr__model__diode_pw2nd_11v0.model.spice"
.include "/usr/share/local/sky130_fd_pr/models/sky130_fd_pr__model__inductors.model.spice"
.include "/usr/share/local/sky130_fd_pr/models/sky130_fd_pr__model__linear.model.spice"
.include "/usr/share/local/sky130_fd_pr/models/sky130_fd_pr__model__r+c.model.spice"
.include "/usr/share/local/sky130_fd_pr/models/sky130_fd_pr__model__diode_pd2nw_11v0.model.spice"
* u2  net-_u1-pad1_ net-_u1-pad2_ /y2 orgate
* u3  net-_u1-pad1_ net-_u1-pad2_ /y3 xor_gate
* u4  a b cin net-_u1-pad1_ net-_u1-pad2_ net-_u1-pad3_ adc_bridge_3
* u7  /c0 cout dac_bridge_1
* u6  /out /y1 adc_bridge_1
* u8  s0 s1 net-_u5-pad6_ net-_u5-pad5_ adc_bridge_2
* u9  net-_u5-pad7_ y dac_bridge_1
v6 vdd gnd  dc 1.8
* s c m o d e
xsc2 gnd y gnd sky130_fd_pr__res_generic_pd 
xsc1 gnd cout gnd sky130_fd_pr__res_generic_pd 
v5 cin gnd  dc 0
* u1  net-_u1-pad1_ net-_u1-pad2_ net-_u1-pad3_ /y0 /c0 fa
x1 a b vdd /out andg
* u5  /y0 /y1 /y2 /y3 net-_u5-pad5_ net-_u5-pad6_ net-_u5-pad7_ mux41
v1  a gnd pulse(0 1.8 0 0.01n 0.01n 1n 2n)
v2  b gnd pulse(1.8 0 0 0.02n 0.02n 2n 3n)
v3  s1 gnd pulse(0 1.8 0 0.03n 0.03n 3n 4n)
v4  s0 gnd pulse(0 1.8 0 0.02n 0.02n 2n 4n)
a1 [net-_u1-pad1_ ] [net-_u1-pad2_ ] [/y2 ] u2
a2 [net-_u1-pad1_ ] [net-_u1-pad2_ ] [/y3 ] u3
a3 [a b cin ] [net-_u1-pad1_ net-_u1-pad2_ net-_u1-pad3_ ] u4
a4 [/c0 ] [cout ] u7
a5 [/out ] [/y1 ] u6
a6 [s0 s1 ] [net-_u5-pad6_ net-_u5-pad5_ ] u8
a7 [net-_u5-pad7_ ] [y ] u9
a8 [net-_u1-pad1_ ] [net-_u1-pad2_ ] [net-_u1-pad3_ ] [/y0 ] [/c0 ] u1
a9 [/y0 ] [/y1 ] [/y2 ] [/y3 ] [net-_u5-pad5_ ] [net-_u5-pad6_ ] [net-_u5-pad7_ ] u5
* Schematic Name:                             orgate, NgSpice Name: orgate
.model u2 orgate(rise_delay=0.0001n fall_delay=0.0001n input_load=1.0e-12 instance_id=1 ) 
* Schematic Name:                             xor_gate, NgSpice Name: xor_gate
.model u3 xor_gate(rise_delay=0.0001n fall_delay=0.0001n input_load=1.0e-12 instance_id=1 ) 
* Schematic Name:                             adc_bridge_3, NgSpice Name: adc_bridge
.model u4 adc_bridge(in_low=0 in_high=2 rise_delay=1.0e-9 fall_delay=1.0e-9 ) 
* Schematic Name:                             dac_bridge_1, NgSpice Name: dac_bridge
.model u7 dac_bridge(out_low=0 out_high=2 out_undef=0.5 input_load=1.0e-12 t_rise=0.0001n t_fall=0.0001n ) 
* Schematic Name:                             adc_bridge_1, NgSpice Name: adc_bridge
.model u6 adc_bridge(in_low=0 in_high=2 rise_delay=0.0001n fall_delay=0.0001n ) 
* Schematic Name:                             adc_bridge_2, NgSpice Name: adc_bridge
.model u8 adc_bridge(in_low=0 in_high=2 rise_delay=0.0001n fall_delay=0.0001n ) 
* Schematic Name:                             dac_bridge_1, NgSpice Name: dac_bridge
.model u9 dac_bridge(out_low=0 out_high=2 out_undef=0.5 input_load=1.0e-12 t_rise=0.01n t_fall=0.01n ) 
* Schematic Name:                             fa, NgSpice Name: fa
.model u1 fa(rise_delay=0.01n fall_delay=0.01n input_load=1.0e-12 instance_id=1 ) 
* Schematic Name:                             mux41, NgSpice Name: mux41
.model u5 mux41(rise_delay=0.01n fall_delay=0.01n input_load=1.0e-12 instance_id=1 ) 
.tran 0.001e-09 15e-09 0e-09

* Control Statements 
.control
run
print allv > plot_data_v.txt
print alli > plot_data_i.txt
.endc
.end
